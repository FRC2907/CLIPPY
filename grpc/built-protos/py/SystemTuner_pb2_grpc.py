# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import ControlGains_pb2 as ControlGains__pb2
import SystemState_pb2 as SystemState__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in SystemTuner_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SystemTunerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetControlGains = channel.stream_unary(
                '/CLIPPY.control.SystemTuner/SetControlGains',
                request_serializer=ControlGains__pb2.ControlGains.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class SystemTunerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetControlGains(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SystemTunerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetControlGains': grpc.stream_unary_rpc_method_handler(
                    servicer.SetControlGains,
                    request_deserializer=ControlGains__pb2.ControlGains.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CLIPPY.control.SystemTuner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CLIPPY.control.SystemTuner', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SystemTuner(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetControlGains(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/CLIPPY.control.SystemTuner/SetControlGains',
            ControlGains__pb2.ControlGains.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SystemDataServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSystemIDs = channel.unary_unary(
                '/CLIPPY.control.SystemDataServer/GetSystemIDs',
                request_serializer=SystemState__pb2.SystemTags.SerializeToString,
                response_deserializer=SystemState__pb2.SystemIDs.FromString,
                _registered_method=True)
        self.GetSystemTags = channel.unary_unary(
                '/CLIPPY.control.SystemDataServer/GetSystemTags',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=SystemState__pb2.SystemTags.FromString,
                _registered_method=True)
        self.GetSystemData = channel.unary_stream(
                '/CLIPPY.control.SystemDataServer/GetSystemData',
                request_serializer=SystemState__pb2.SystemIDs.SerializeToString,
                response_deserializer=SystemState__pb2.SystemState.FromString,
                _registered_method=True)


class SystemDataServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSystemIDs(self, request, context):
        """Return all IDs that are tagged with ANY of these tags. Empty set returns all IDs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SystemDataServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSystemIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemIDs,
                    request_deserializer=SystemState__pb2.SystemTags.FromString,
                    response_serializer=SystemState__pb2.SystemIDs.SerializeToString,
            ),
            'GetSystemTags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemTags,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=SystemState__pb2.SystemTags.SerializeToString,
            ),
            'GetSystemData': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSystemData,
                    request_deserializer=SystemState__pb2.SystemIDs.FromString,
                    response_serializer=SystemState__pb2.SystemState.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CLIPPY.control.SystemDataServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CLIPPY.control.SystemDataServer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SystemDataServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSystemIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CLIPPY.control.SystemDataServer/GetSystemIDs',
            SystemState__pb2.SystemTags.SerializeToString,
            SystemState__pb2.SystemIDs.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSystemTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CLIPPY.control.SystemDataServer/GetSystemTags',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            SystemState__pb2.SystemTags.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSystemData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/CLIPPY.control.SystemDataServer/GetSystemData',
            SystemState__pb2.SystemIDs.SerializeToString,
            SystemState__pb2.SystemState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
