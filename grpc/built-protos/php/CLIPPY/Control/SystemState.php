<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SystemState.proto

namespace CLIPPY\Control;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>CLIPPY.control.SystemState</code>
 */
class SystemState extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    protected $timestamp = null;
    /**
     * Generated from protobuf field <code>string system_id = 2;</code>
     */
    protected $system_id = '';
    /**
     * Generated from protobuf field <code>.CLIPPY.control.SystemState.Measurement state = 3;</code>
     */
    protected $state = null;
    /**
     * Generated from protobuf field <code>.CLIPPY.control.ControlGains gains = 4;</code>
     */
    protected $gains = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $timestamp
     *     @type string $system_id
     *     @type \CLIPPY\Control\SystemState\Measurement $state
     *     @type \CLIPPY\Control\ControlGains $gains
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SystemState::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    public function hasTimestamp()
    {
        return isset($this->timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->timestamp);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string system_id = 2;</code>
     * @return string
     */
    public function getSystemId()
    {
        return $this->system_id;
    }

    /**
     * Generated from protobuf field <code>string system_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSystemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->system_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CLIPPY.control.SystemState.Measurement state = 3;</code>
     * @return \CLIPPY\Control\SystemState\Measurement|null
     */
    public function getState()
    {
        return $this->state;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     * Generated from protobuf field <code>.CLIPPY.control.SystemState.Measurement state = 3;</code>
     * @param \CLIPPY\Control\SystemState\Measurement $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkMessage($var, \CLIPPY\Control\SystemState\Measurement::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CLIPPY.control.ControlGains gains = 4;</code>
     * @return \CLIPPY\Control\ControlGains|null
     */
    public function getGains()
    {
        return $this->gains;
    }

    public function hasGains()
    {
        return isset($this->gains);
    }

    public function clearGains()
    {
        unset($this->gains);
    }

    /**
     * Generated from protobuf field <code>.CLIPPY.control.ControlGains gains = 4;</code>
     * @param \CLIPPY\Control\ControlGains $var
     * @return $this
     */
    public function setGains($var)
    {
        GPBUtil::checkMessage($var, \CLIPPY\Control\ControlGains::class);
        $this->gains = $var;

        return $this;
    }

}

