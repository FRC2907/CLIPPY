<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ControlGains.proto

namespace CLIPPY\Control;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>CLIPPY.control.ControlGains</code>
 */
class ControlGains extends \Google\Protobuf\Internal\Message
{
    /**
     * recall that all fields are optional
     *
     * Generated from protobuf field <code>string system_id = 1;</code>
     */
    protected $system_id = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kP = 2;</code>
     */
    protected $kP = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kI = 3;</code>
     */
    protected $kI = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kD = 4;</code>
     */
    protected $kD = null;
    /**
     * kS for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_static = 5;</code>
     */
    protected $kF_static = null;
    /**
     * kV for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear = 6;</code>
     */
    protected $kF_linear = null;
    /**
     * kA for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear_per_time = 7;</code>
     */
    protected $kF_linear_per_time = null;
    /**
     * kG for elevator ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_constant = 8;</code>
     */
    protected $kF_constant = null;
    /**
     * "ultimate gain" for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kU = 9;</code>
     */
    protected $kU = null;
    /**
     * period of oscillation for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue tU = 10;</code>
     */
    protected $tU = null;
    /**
     * ziegler-nichols meta-gains to derive PID from using kU
     *
     * Generated from protobuf field <code>.CLIPPY.control.ZNControlRule znControlRule = 11;</code>
     */
    protected $znControlRule = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $system_id
     *           recall that all fields are optional
     *     @type \Google\Protobuf\DoubleValue $kP
     *     @type \Google\Protobuf\DoubleValue $kI
     *     @type \Google\Protobuf\DoubleValue $kD
     *     @type \Google\Protobuf\DoubleValue $kF_static
     *           kS for vel ctl
     *     @type \Google\Protobuf\DoubleValue $kF_linear
     *           kV for vel ctl
     *     @type \Google\Protobuf\DoubleValue $kF_linear_per_time
     *           kA for vel ctl
     *     @type \Google\Protobuf\DoubleValue $kF_constant
     *           kG for elevator ctl
     *     @type \Google\Protobuf\DoubleValue $kU
     *           "ultimate gain" for ziegler-nichols
     *     @type \Google\Protobuf\DoubleValue $tU
     *           period of oscillation for ziegler-nichols
     *     @type int $znControlRule
     *           ziegler-nichols meta-gains to derive PID from using kU
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ControlGains::initOnce();
        parent::__construct($data);
    }

    /**
     * recall that all fields are optional
     *
     * Generated from protobuf field <code>string system_id = 1;</code>
     * @return string
     */
    public function getSystemId()
    {
        return $this->system_id;
    }

    /**
     * recall that all fields are optional
     *
     * Generated from protobuf field <code>string system_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSystemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->system_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kP = 2;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKP()
    {
        return $this->kP;
    }

    public function hasKP()
    {
        return isset($this->kP);
    }

    public function clearKP()
    {
        unset($this->kP);
    }

    /**
     * Returns the unboxed value from <code>getKP()</code>

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kP = 2;</code>
     * @return float|null
     */
    public function getKPUnwrapped()
    {
        return $this->readWrapperValue("kP");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kP = 2;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKP($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kP = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kP = 2;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKPUnwrapped($var)
    {
        $this->writeWrapperValue("kP", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kI = 3;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKI()
    {
        return $this->kI;
    }

    public function hasKI()
    {
        return isset($this->kI);
    }

    public function clearKI()
    {
        unset($this->kI);
    }

    /**
     * Returns the unboxed value from <code>getKI()</code>

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kI = 3;</code>
     * @return float|null
     */
    public function getKIUnwrapped()
    {
        return $this->readWrapperValue("kI");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kI = 3;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKI($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kI = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kI = 3;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKIUnwrapped($var)
    {
        $this->writeWrapperValue("kI", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kD = 4;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKD()
    {
        return $this->kD;
    }

    public function hasKD()
    {
        return isset($this->kD);
    }

    public function clearKD()
    {
        unset($this->kD);
    }

    /**
     * Returns the unboxed value from <code>getKD()</code>

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kD = 4;</code>
     * @return float|null
     */
    public function getKDUnwrapped()
    {
        return $this->readWrapperValue("kD");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kD = 4;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKD($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kD = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * Generated from protobuf field <code>.google.protobuf.DoubleValue kD = 4;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKDUnwrapped($var)
    {
        $this->writeWrapperValue("kD", $var);
        return $this;}

    /**
     * kS for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_static = 5;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKFStatic()
    {
        return $this->kF_static;
    }

    public function hasKFStatic()
    {
        return isset($this->kF_static);
    }

    public function clearKFStatic()
    {
        unset($this->kF_static);
    }

    /**
     * Returns the unboxed value from <code>getKFStatic()</code>

     * kS for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_static = 5;</code>
     * @return float|null
     */
    public function getKFStaticUnwrapped()
    {
        return $this->readWrapperValue("kF_static");
    }

    /**
     * kS for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_static = 5;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKFStatic($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kF_static = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * kS for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_static = 5;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKFStaticUnwrapped($var)
    {
        $this->writeWrapperValue("kF_static", $var);
        return $this;}

    /**
     * kV for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear = 6;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKFLinear()
    {
        return $this->kF_linear;
    }

    public function hasKFLinear()
    {
        return isset($this->kF_linear);
    }

    public function clearKFLinear()
    {
        unset($this->kF_linear);
    }

    /**
     * Returns the unboxed value from <code>getKFLinear()</code>

     * kV for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear = 6;</code>
     * @return float|null
     */
    public function getKFLinearUnwrapped()
    {
        return $this->readWrapperValue("kF_linear");
    }

    /**
     * kV for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear = 6;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKFLinear($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kF_linear = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * kV for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear = 6;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKFLinearUnwrapped($var)
    {
        $this->writeWrapperValue("kF_linear", $var);
        return $this;}

    /**
     * kA for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear_per_time = 7;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKFLinearPerTime()
    {
        return $this->kF_linear_per_time;
    }

    public function hasKFLinearPerTime()
    {
        return isset($this->kF_linear_per_time);
    }

    public function clearKFLinearPerTime()
    {
        unset($this->kF_linear_per_time);
    }

    /**
     * Returns the unboxed value from <code>getKFLinearPerTime()</code>

     * kA for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear_per_time = 7;</code>
     * @return float|null
     */
    public function getKFLinearPerTimeUnwrapped()
    {
        return $this->readWrapperValue("kF_linear_per_time");
    }

    /**
     * kA for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear_per_time = 7;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKFLinearPerTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kF_linear_per_time = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * kA for vel ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_linear_per_time = 7;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKFLinearPerTimeUnwrapped($var)
    {
        $this->writeWrapperValue("kF_linear_per_time", $var);
        return $this;}

    /**
     * kG for elevator ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_constant = 8;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKFConstant()
    {
        return $this->kF_constant;
    }

    public function hasKFConstant()
    {
        return isset($this->kF_constant);
    }

    public function clearKFConstant()
    {
        unset($this->kF_constant);
    }

    /**
     * Returns the unboxed value from <code>getKFConstant()</code>

     * kG for elevator ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_constant = 8;</code>
     * @return float|null
     */
    public function getKFConstantUnwrapped()
    {
        return $this->readWrapperValue("kF_constant");
    }

    /**
     * kG for elevator ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_constant = 8;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKFConstant($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kF_constant = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * kG for elevator ctl
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kF_constant = 8;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKFConstantUnwrapped($var)
    {
        $this->writeWrapperValue("kF_constant", $var);
        return $this;}

    /**
     * "ultimate gain" for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kU = 9;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getKU()
    {
        return $this->kU;
    }

    public function hasKU()
    {
        return isset($this->kU);
    }

    public function clearKU()
    {
        unset($this->kU);
    }

    /**
     * Returns the unboxed value from <code>getKU()</code>

     * "ultimate gain" for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kU = 9;</code>
     * @return float|null
     */
    public function getKUUnwrapped()
    {
        return $this->readWrapperValue("kU");
    }

    /**
     * "ultimate gain" for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kU = 9;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setKU($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->kU = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * "ultimate gain" for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue kU = 9;</code>
     * @param float|null $var
     * @return $this
     */
    public function setKUUnwrapped($var)
    {
        $this->writeWrapperValue("kU", $var);
        return $this;}

    /**
     * period of oscillation for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue tU = 10;</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getTU()
    {
        return $this->tU;
    }

    public function hasTU()
    {
        return isset($this->tU);
    }

    public function clearTU()
    {
        unset($this->tU);
    }

    /**
     * Returns the unboxed value from <code>getTU()</code>

     * period of oscillation for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue tU = 10;</code>
     * @return float|null
     */
    public function getTUUnwrapped()
    {
        return $this->readWrapperValue("tU");
    }

    /**
     * period of oscillation for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue tU = 10;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setTU($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->tU = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * period of oscillation for ziegler-nichols
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue tU = 10;</code>
     * @param float|null $var
     * @return $this
     */
    public function setTUUnwrapped($var)
    {
        $this->writeWrapperValue("tU", $var);
        return $this;}

    /**
     * ziegler-nichols meta-gains to derive PID from using kU
     *
     * Generated from protobuf field <code>.CLIPPY.control.ZNControlRule znControlRule = 11;</code>
     * @return int
     */
    public function getZnControlRule()
    {
        return $this->znControlRule;
    }

    /**
     * ziegler-nichols meta-gains to derive PID from using kU
     *
     * Generated from protobuf field <code>.CLIPPY.control.ZNControlRule znControlRule = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setZnControlRule($var)
    {
        GPBUtil::checkEnum($var, \CLIPPY\Control\ZNControlRule::class);
        $this->znControlRule = $var;

        return $this;
    }

}

