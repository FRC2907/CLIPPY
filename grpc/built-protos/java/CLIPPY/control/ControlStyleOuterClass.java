// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ControlStyle.proto

package CLIPPY.control;

public final class ControlStyleOuterClass {
  private ControlStyleOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code CLIPPY.control.ControlStyleEnum}
   */
  public enum ControlStyleEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Go crazy go stupid
     * </pre>
     *
     * <code>NO_CONTROL = 0;</code>
     */
    NO_CONTROL(0),
    /**
     * <pre>
     * Fall back to traditional FRC controls
     * </pre>
     *
     * <code>MANUAL_DS = 1;</code>
     */
    MANUAL_DS(1),
    /**
     * <pre>
     * Use control targets sent via gRPC directly from driver
     * </pre>
     *
     * <code>MANUAL = 2;</code>
     */
    MANUAL(2),
    /**
     * <pre>
     * Listen for control targets from the motion planner
     * </pre>
     *
     * <code>PLANNER = 3;</code>
     */
    PLANNER(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Go crazy go stupid
     * </pre>
     *
     * <code>NO_CONTROL = 0;</code>
     */
    public static final int NO_CONTROL_VALUE = 0;
    /**
     * <pre>
     * Fall back to traditional FRC controls
     * </pre>
     *
     * <code>MANUAL_DS = 1;</code>
     */
    public static final int MANUAL_DS_VALUE = 1;
    /**
     * <pre>
     * Use control targets sent via gRPC directly from driver
     * </pre>
     *
     * <code>MANUAL = 2;</code>
     */
    public static final int MANUAL_VALUE = 2;
    /**
     * <pre>
     * Listen for control targets from the motion planner
     * </pre>
     *
     * <code>PLANNER = 3;</code>
     */
    public static final int PLANNER_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ControlStyleEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ControlStyleEnum forNumber(int value) {
      switch (value) {
        case 0: return NO_CONTROL;
        case 1: return MANUAL_DS;
        case 2: return MANUAL;
        case 3: return PLANNER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlStyleEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ControlStyleEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlStyleEnum>() {
            public ControlStyleEnum findValueByNumber(int number) {
              return ControlStyleEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return CLIPPY.control.ControlStyleOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final ControlStyleEnum[] VALUES = values();

    public static ControlStyleEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ControlStyleEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CLIPPY.control.ControlStyleEnum)
  }

  public interface ControlStyleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLIPPY.control.ControlStyle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
     * @return The enum numeric value on the wire for controlStyle.
     */
    int getControlStyleValue();
    /**
     * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
     * @return The controlStyle.
     */
    CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum getControlStyle();
  }
  /**
   * Protobuf type {@code CLIPPY.control.ControlStyle}
   */
  public static final class ControlStyle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CLIPPY.control.ControlStyle)
      ControlStyleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControlStyle.newBuilder() to construct.
    private ControlStyle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlStyle() {
      controlStyle_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControlStyle();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CLIPPY.control.ControlStyleOuterClass.internal_static_CLIPPY_control_ControlStyle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CLIPPY.control.ControlStyleOuterClass.internal_static_CLIPPY_control_ControlStyle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CLIPPY.control.ControlStyleOuterClass.ControlStyle.class, CLIPPY.control.ControlStyleOuterClass.ControlStyle.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    public static final int CONTROL_STYLE_FIELD_NUMBER = 2;
    private int controlStyle_ = 0;
    /**
     * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
     * @return The enum numeric value on the wire for controlStyle.
     */
    @java.lang.Override public int getControlStyleValue() {
      return controlStyle_;
    }
    /**
     * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
     * @return The controlStyle.
     */
    @java.lang.Override public CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum getControlStyle() {
      CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum result = CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.forNumber(controlStyle_);
      return result == null ? CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTimestamp());
      }
      if (controlStyle_ != CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.NO_CONTROL.getNumber()) {
        output.writeEnum(2, controlStyle_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      if (controlStyle_ != CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.NO_CONTROL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, controlStyle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CLIPPY.control.ControlStyleOuterClass.ControlStyle)) {
        return super.equals(obj);
      }
      CLIPPY.control.ControlStyleOuterClass.ControlStyle other = (CLIPPY.control.ControlStyleOuterClass.ControlStyle) obj;

      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
      }
      if (controlStyle_ != other.controlStyle_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (37 * hash) + CONTROL_STYLE_FIELD_NUMBER;
      hash = (53 * hash) + controlStyle_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CLIPPY.control.ControlStyleOuterClass.ControlStyle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLIPPY.control.ControlStyle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLIPPY.control.ControlStyle)
        CLIPPY.control.ControlStyleOuterClass.ControlStyleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.control.ControlStyleOuterClass.internal_static_CLIPPY_control_ControlStyle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.control.ControlStyleOuterClass.internal_static_CLIPPY_control_ControlStyle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.control.ControlStyleOuterClass.ControlStyle.class, CLIPPY.control.ControlStyleOuterClass.ControlStyle.Builder.class);
      }

      // Construct using CLIPPY.control.ControlStyleOuterClass.ControlStyle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimestampFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        controlStyle_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CLIPPY.control.ControlStyleOuterClass.internal_static_CLIPPY_control_ControlStyle_descriptor;
      }

      @java.lang.Override
      public CLIPPY.control.ControlStyleOuterClass.ControlStyle getDefaultInstanceForType() {
        return CLIPPY.control.ControlStyleOuterClass.ControlStyle.getDefaultInstance();
      }

      @java.lang.Override
      public CLIPPY.control.ControlStyleOuterClass.ControlStyle build() {
        CLIPPY.control.ControlStyleOuterClass.ControlStyle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CLIPPY.control.ControlStyleOuterClass.ControlStyle buildPartial() {
        CLIPPY.control.ControlStyleOuterClass.ControlStyle result = new CLIPPY.control.ControlStyleOuterClass.ControlStyle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(CLIPPY.control.ControlStyleOuterClass.ControlStyle result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestamp_ = timestampBuilder_ == null
              ? timestamp_
              : timestampBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.controlStyle_ = controlStyle_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CLIPPY.control.ControlStyleOuterClass.ControlStyle) {
          return mergeFrom((CLIPPY.control.ControlStyleOuterClass.ControlStyle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CLIPPY.control.ControlStyleOuterClass.ControlStyle other) {
        if (other == CLIPPY.control.ControlStyleOuterClass.ControlStyle.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (other.controlStyle_ != 0) {
          setControlStyleValue(other.getControlStyleValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTimestampFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                controlStyle_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Timestamp timestamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return The timestamp.
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
        } else {
          timestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            timestamp_ != null &&
            timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTimestampBuilder().mergeFrom(value);
          } else {
            timestamp_ = value;
          }
        } else {
          timestampBuilder_.mergeFrom(value);
        }
        if (timestamp_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private int controlStyle_ = 0;
      /**
       * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
       * @return The enum numeric value on the wire for controlStyle.
       */
      @java.lang.Override public int getControlStyleValue() {
        return controlStyle_;
      }
      /**
       * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
       * @param value The enum numeric value on the wire for controlStyle to set.
       * @return This builder for chaining.
       */
      public Builder setControlStyleValue(int value) {
        controlStyle_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
       * @return The controlStyle.
       */
      @java.lang.Override
      public CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum getControlStyle() {
        CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum result = CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.forNumber(controlStyle_);
        return result == null ? CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
       * @param value The controlStyle to set.
       * @return This builder for chaining.
       */
      public Builder setControlStyle(CLIPPY.control.ControlStyleOuterClass.ControlStyleEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        controlStyle_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.CLIPPY.control.ControlStyleEnum control_style = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearControlStyle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controlStyle_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CLIPPY.control.ControlStyle)
    }

    // @@protoc_insertion_point(class_scope:CLIPPY.control.ControlStyle)
    private static final CLIPPY.control.ControlStyleOuterClass.ControlStyle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CLIPPY.control.ControlStyleOuterClass.ControlStyle();
    }

    public static CLIPPY.control.ControlStyleOuterClass.ControlStyle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlStyle>
        PARSER = new com.google.protobuf.AbstractParser<ControlStyle>() {
      @java.lang.Override
      public ControlStyle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ControlStyle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlStyle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CLIPPY.control.ControlStyleOuterClass.ControlStyle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_control_ControlStyle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_control_ControlStyle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ControlStyle.proto\022\016CLIPPY.control\032\037go" +
      "ogle/protobuf/timestamp.proto\"v\n\014Control" +
      "Style\022-\n\ttimestamp\030\001 \001(\0132\032.google.protob" +
      "uf.Timestamp\0227\n\rcontrol_style\030\002 \001(\0162 .CL" +
      "IPPY.control.ControlStyleEnum*J\n\020Control" +
      "StyleEnum\022\016\n\nNO_CONTROL\020\000\022\r\n\tMANUAL_DS\020\001" +
      "\022\n\n\006MANUAL\020\002\022\013\n\007PLANNER\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_CLIPPY_control_ControlStyle_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLIPPY_control_ControlStyle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_control_ControlStyle_descriptor,
        new java.lang.String[] { "Timestamp", "ControlStyle", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
