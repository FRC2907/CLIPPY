// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ControlGains.proto

package CLIPPY.control;

public final class ControlGainsOuterClass {
  private ControlGainsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ControlGainsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLIPPY.control.ControlGains)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * recall that all fields are optional
     * </pre>
     *
     * <code>string system_id = 1;</code>
     * @return The systemId.
     */
    java.lang.String getSystemId();
    /**
     * <pre>
     * recall that all fields are optional
     * </pre>
     *
     * <code>string system_id = 1;</code>
     * @return The bytes for systemId.
     */
    com.google.protobuf.ByteString
        getSystemIdBytes();

    /**
     * <code>double kP = 2;</code>
     * @return The kP.
     */
    double getKP();

    /**
     * <code>double kI = 3;</code>
     * @return The kI.
     */
    double getKI();

    /**
     * <code>double kD = 4;</code>
     * @return The kD.
     */
    double getKD();

    /**
     * <pre>
     * kS for vel ctl
     * </pre>
     *
     * <code>double kF_static = 5;</code>
     * @return The kFStatic.
     */
    double getKFStatic();

    /**
     * <pre>
     * kV for vel ctl
     * </pre>
     *
     * <code>double kF_linear = 6;</code>
     * @return The kFLinear.
     */
    double getKFLinear();

    /**
     * <pre>
     * kA for vel ctl
     * </pre>
     *
     * <code>double kF_square = 7;</code>
     * @return The kFSquare.
     */
    double getKFSquare();

    /**
     * <pre>
     * kG for arm pos ctl
     * </pre>
     *
     * <code>double kF_cosine = 8;</code>
     * @return The kFCosine.
     */
    double getKFCosine();

    /**
     * <pre>
     * "ultimate gain" for ziegler-nichols
     * </pre>
     *
     * <code>double kU = 9;</code>
     * @return The kU.
     */
    double getKU();
  }
  /**
   * Protobuf type {@code CLIPPY.control.ControlGains}
   */
  public static final class ControlGains extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CLIPPY.control.ControlGains)
      ControlGainsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControlGains.newBuilder() to construct.
    private ControlGains(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlGains() {
      systemId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControlGains();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CLIPPY.control.ControlGainsOuterClass.internal_static_CLIPPY_control_ControlGains_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CLIPPY.control.ControlGainsOuterClass.internal_static_CLIPPY_control_ControlGains_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CLIPPY.control.ControlGainsOuterClass.ControlGains.class, CLIPPY.control.ControlGainsOuterClass.ControlGains.Builder.class);
    }

    public static final int SYSTEM_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object systemId_ = "";
    /**
     * <pre>
     * recall that all fields are optional
     * </pre>
     *
     * <code>string system_id = 1;</code>
     * @return The systemId.
     */
    @java.lang.Override
    public java.lang.String getSystemId() {
      java.lang.Object ref = systemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        systemId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * recall that all fields are optional
     * </pre>
     *
     * <code>string system_id = 1;</code>
     * @return The bytes for systemId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSystemIdBytes() {
      java.lang.Object ref = systemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        systemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KP_FIELD_NUMBER = 2;
    private double kP_ = 0D;
    /**
     * <code>double kP = 2;</code>
     * @return The kP.
     */
    @java.lang.Override
    public double getKP() {
      return kP_;
    }

    public static final int KI_FIELD_NUMBER = 3;
    private double kI_ = 0D;
    /**
     * <code>double kI = 3;</code>
     * @return The kI.
     */
    @java.lang.Override
    public double getKI() {
      return kI_;
    }

    public static final int KD_FIELD_NUMBER = 4;
    private double kD_ = 0D;
    /**
     * <code>double kD = 4;</code>
     * @return The kD.
     */
    @java.lang.Override
    public double getKD() {
      return kD_;
    }

    public static final int KF_STATIC_FIELD_NUMBER = 5;
    private double kFStatic_ = 0D;
    /**
     * <pre>
     * kS for vel ctl
     * </pre>
     *
     * <code>double kF_static = 5;</code>
     * @return The kFStatic.
     */
    @java.lang.Override
    public double getKFStatic() {
      return kFStatic_;
    }

    public static final int KF_LINEAR_FIELD_NUMBER = 6;
    private double kFLinear_ = 0D;
    /**
     * <pre>
     * kV for vel ctl
     * </pre>
     *
     * <code>double kF_linear = 6;</code>
     * @return The kFLinear.
     */
    @java.lang.Override
    public double getKFLinear() {
      return kFLinear_;
    }

    public static final int KF_SQUARE_FIELD_NUMBER = 7;
    private double kFSquare_ = 0D;
    /**
     * <pre>
     * kA for vel ctl
     * </pre>
     *
     * <code>double kF_square = 7;</code>
     * @return The kFSquare.
     */
    @java.lang.Override
    public double getKFSquare() {
      return kFSquare_;
    }

    public static final int KF_COSINE_FIELD_NUMBER = 8;
    private double kFCosine_ = 0D;
    /**
     * <pre>
     * kG for arm pos ctl
     * </pre>
     *
     * <code>double kF_cosine = 8;</code>
     * @return The kFCosine.
     */
    @java.lang.Override
    public double getKFCosine() {
      return kFCosine_;
    }

    public static final int KU_FIELD_NUMBER = 9;
    private double kU_ = 0D;
    /**
     * <pre>
     * "ultimate gain" for ziegler-nichols
     * </pre>
     *
     * <code>double kU = 9;</code>
     * @return The kU.
     */
    @java.lang.Override
    public double getKU() {
      return kU_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, systemId_);
      }
      if (java.lang.Double.doubleToRawLongBits(kP_) != 0) {
        output.writeDouble(2, kP_);
      }
      if (java.lang.Double.doubleToRawLongBits(kI_) != 0) {
        output.writeDouble(3, kI_);
      }
      if (java.lang.Double.doubleToRawLongBits(kD_) != 0) {
        output.writeDouble(4, kD_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFStatic_) != 0) {
        output.writeDouble(5, kFStatic_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFLinear_) != 0) {
        output.writeDouble(6, kFLinear_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFSquare_) != 0) {
        output.writeDouble(7, kFSquare_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFCosine_) != 0) {
        output.writeDouble(8, kFCosine_);
      }
      if (java.lang.Double.doubleToRawLongBits(kU_) != 0) {
        output.writeDouble(9, kU_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, systemId_);
      }
      if (java.lang.Double.doubleToRawLongBits(kP_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, kP_);
      }
      if (java.lang.Double.doubleToRawLongBits(kI_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, kI_);
      }
      if (java.lang.Double.doubleToRawLongBits(kD_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, kD_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFStatic_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, kFStatic_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFLinear_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, kFLinear_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFSquare_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, kFSquare_);
      }
      if (java.lang.Double.doubleToRawLongBits(kFCosine_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, kFCosine_);
      }
      if (java.lang.Double.doubleToRawLongBits(kU_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, kU_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CLIPPY.control.ControlGainsOuterClass.ControlGains)) {
        return super.equals(obj);
      }
      CLIPPY.control.ControlGainsOuterClass.ControlGains other = (CLIPPY.control.ControlGainsOuterClass.ControlGains) obj;

      if (!getSystemId()
          .equals(other.getSystemId())) return false;
      if (java.lang.Double.doubleToLongBits(getKP())
          != java.lang.Double.doubleToLongBits(
              other.getKP())) return false;
      if (java.lang.Double.doubleToLongBits(getKI())
          != java.lang.Double.doubleToLongBits(
              other.getKI())) return false;
      if (java.lang.Double.doubleToLongBits(getKD())
          != java.lang.Double.doubleToLongBits(
              other.getKD())) return false;
      if (java.lang.Double.doubleToLongBits(getKFStatic())
          != java.lang.Double.doubleToLongBits(
              other.getKFStatic())) return false;
      if (java.lang.Double.doubleToLongBits(getKFLinear())
          != java.lang.Double.doubleToLongBits(
              other.getKFLinear())) return false;
      if (java.lang.Double.doubleToLongBits(getKFSquare())
          != java.lang.Double.doubleToLongBits(
              other.getKFSquare())) return false;
      if (java.lang.Double.doubleToLongBits(getKFCosine())
          != java.lang.Double.doubleToLongBits(
              other.getKFCosine())) return false;
      if (java.lang.Double.doubleToLongBits(getKU())
          != java.lang.Double.doubleToLongBits(
              other.getKU())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYSTEM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSystemId().hashCode();
      hash = (37 * hash) + KP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKP()));
      hash = (37 * hash) + KI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKI()));
      hash = (37 * hash) + KD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKD()));
      hash = (37 * hash) + KF_STATIC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKFStatic()));
      hash = (37 * hash) + KF_LINEAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKFLinear()));
      hash = (37 * hash) + KF_SQUARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKFSquare()));
      hash = (37 * hash) + KF_COSINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKFCosine()));
      hash = (37 * hash) + KU_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKU()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlGainsOuterClass.ControlGains parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CLIPPY.control.ControlGainsOuterClass.ControlGains prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLIPPY.control.ControlGains}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLIPPY.control.ControlGains)
        CLIPPY.control.ControlGainsOuterClass.ControlGainsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.control.ControlGainsOuterClass.internal_static_CLIPPY_control_ControlGains_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.control.ControlGainsOuterClass.internal_static_CLIPPY_control_ControlGains_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.control.ControlGainsOuterClass.ControlGains.class, CLIPPY.control.ControlGainsOuterClass.ControlGains.Builder.class);
      }

      // Construct using CLIPPY.control.ControlGainsOuterClass.ControlGains.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        systemId_ = "";
        kP_ = 0D;
        kI_ = 0D;
        kD_ = 0D;
        kFStatic_ = 0D;
        kFLinear_ = 0D;
        kFSquare_ = 0D;
        kFCosine_ = 0D;
        kU_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CLIPPY.control.ControlGainsOuterClass.internal_static_CLIPPY_control_ControlGains_descriptor;
      }

      @java.lang.Override
      public CLIPPY.control.ControlGainsOuterClass.ControlGains getDefaultInstanceForType() {
        return CLIPPY.control.ControlGainsOuterClass.ControlGains.getDefaultInstance();
      }

      @java.lang.Override
      public CLIPPY.control.ControlGainsOuterClass.ControlGains build() {
        CLIPPY.control.ControlGainsOuterClass.ControlGains result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CLIPPY.control.ControlGainsOuterClass.ControlGains buildPartial() {
        CLIPPY.control.ControlGainsOuterClass.ControlGains result = new CLIPPY.control.ControlGainsOuterClass.ControlGains(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(CLIPPY.control.ControlGainsOuterClass.ControlGains result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.systemId_ = systemId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.kP_ = kP_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.kI_ = kI_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.kD_ = kD_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.kFStatic_ = kFStatic_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.kFLinear_ = kFLinear_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.kFSquare_ = kFSquare_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.kFCosine_ = kFCosine_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.kU_ = kU_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CLIPPY.control.ControlGainsOuterClass.ControlGains) {
          return mergeFrom((CLIPPY.control.ControlGainsOuterClass.ControlGains)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CLIPPY.control.ControlGainsOuterClass.ControlGains other) {
        if (other == CLIPPY.control.ControlGainsOuterClass.ControlGains.getDefaultInstance()) return this;
        if (!other.getSystemId().isEmpty()) {
          systemId_ = other.systemId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getKP() != 0D) {
          setKP(other.getKP());
        }
        if (other.getKI() != 0D) {
          setKI(other.getKI());
        }
        if (other.getKD() != 0D) {
          setKD(other.getKD());
        }
        if (other.getKFStatic() != 0D) {
          setKFStatic(other.getKFStatic());
        }
        if (other.getKFLinear() != 0D) {
          setKFLinear(other.getKFLinear());
        }
        if (other.getKFSquare() != 0D) {
          setKFSquare(other.getKFSquare());
        }
        if (other.getKFCosine() != 0D) {
          setKFCosine(other.getKFCosine());
        }
        if (other.getKU() != 0D) {
          setKU(other.getKU());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                systemId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 17: {
                kP_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                kI_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                kD_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                kFStatic_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                kFLinear_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                kFSquare_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                kFCosine_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 73: {
                kU_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object systemId_ = "";
      /**
       * <pre>
       * recall that all fields are optional
       * </pre>
       *
       * <code>string system_id = 1;</code>
       * @return The systemId.
       */
      public java.lang.String getSystemId() {
        java.lang.Object ref = systemId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          systemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * recall that all fields are optional
       * </pre>
       *
       * <code>string system_id = 1;</code>
       * @return The bytes for systemId.
       */
      public com.google.protobuf.ByteString
          getSystemIdBytes() {
        java.lang.Object ref = systemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          systemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * recall that all fields are optional
       * </pre>
       *
       * <code>string system_id = 1;</code>
       * @param value The systemId to set.
       * @return This builder for chaining.
       */
      public Builder setSystemId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        systemId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * recall that all fields are optional
       * </pre>
       *
       * <code>string system_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemId() {
        systemId_ = getDefaultInstance().getSystemId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * recall that all fields are optional
       * </pre>
       *
       * <code>string system_id = 1;</code>
       * @param value The bytes for systemId to set.
       * @return This builder for chaining.
       */
      public Builder setSystemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        systemId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private double kP_ ;
      /**
       * <code>double kP = 2;</code>
       * @return The kP.
       */
      @java.lang.Override
      public double getKP() {
        return kP_;
      }
      /**
       * <code>double kP = 2;</code>
       * @param value The kP to set.
       * @return This builder for chaining.
       */
      public Builder setKP(double value) {

        kP_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double kP = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kP_ = 0D;
        onChanged();
        return this;
      }

      private double kI_ ;
      /**
       * <code>double kI = 3;</code>
       * @return The kI.
       */
      @java.lang.Override
      public double getKI() {
        return kI_;
      }
      /**
       * <code>double kI = 3;</code>
       * @param value The kI to set.
       * @return This builder for chaining.
       */
      public Builder setKI(double value) {

        kI_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double kI = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kI_ = 0D;
        onChanged();
        return this;
      }

      private double kD_ ;
      /**
       * <code>double kD = 4;</code>
       * @return The kD.
       */
      @java.lang.Override
      public double getKD() {
        return kD_;
      }
      /**
       * <code>double kD = 4;</code>
       * @param value The kD to set.
       * @return This builder for chaining.
       */
      public Builder setKD(double value) {

        kD_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double kD = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKD() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kD_ = 0D;
        onChanged();
        return this;
      }

      private double kFStatic_ ;
      /**
       * <pre>
       * kS for vel ctl
       * </pre>
       *
       * <code>double kF_static = 5;</code>
       * @return The kFStatic.
       */
      @java.lang.Override
      public double getKFStatic() {
        return kFStatic_;
      }
      /**
       * <pre>
       * kS for vel ctl
       * </pre>
       *
       * <code>double kF_static = 5;</code>
       * @param value The kFStatic to set.
       * @return This builder for chaining.
       */
      public Builder setKFStatic(double value) {

        kFStatic_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kS for vel ctl
       * </pre>
       *
       * <code>double kF_static = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearKFStatic() {
        bitField0_ = (bitField0_ & ~0x00000010);
        kFStatic_ = 0D;
        onChanged();
        return this;
      }

      private double kFLinear_ ;
      /**
       * <pre>
       * kV for vel ctl
       * </pre>
       *
       * <code>double kF_linear = 6;</code>
       * @return The kFLinear.
       */
      @java.lang.Override
      public double getKFLinear() {
        return kFLinear_;
      }
      /**
       * <pre>
       * kV for vel ctl
       * </pre>
       *
       * <code>double kF_linear = 6;</code>
       * @param value The kFLinear to set.
       * @return This builder for chaining.
       */
      public Builder setKFLinear(double value) {

        kFLinear_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kV for vel ctl
       * </pre>
       *
       * <code>double kF_linear = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKFLinear() {
        bitField0_ = (bitField0_ & ~0x00000020);
        kFLinear_ = 0D;
        onChanged();
        return this;
      }

      private double kFSquare_ ;
      /**
       * <pre>
       * kA for vel ctl
       * </pre>
       *
       * <code>double kF_square = 7;</code>
       * @return The kFSquare.
       */
      @java.lang.Override
      public double getKFSquare() {
        return kFSquare_;
      }
      /**
       * <pre>
       * kA for vel ctl
       * </pre>
       *
       * <code>double kF_square = 7;</code>
       * @param value The kFSquare to set.
       * @return This builder for chaining.
       */
      public Builder setKFSquare(double value) {

        kFSquare_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kA for vel ctl
       * </pre>
       *
       * <code>double kF_square = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearKFSquare() {
        bitField0_ = (bitField0_ & ~0x00000040);
        kFSquare_ = 0D;
        onChanged();
        return this;
      }

      private double kFCosine_ ;
      /**
       * <pre>
       * kG for arm pos ctl
       * </pre>
       *
       * <code>double kF_cosine = 8;</code>
       * @return The kFCosine.
       */
      @java.lang.Override
      public double getKFCosine() {
        return kFCosine_;
      }
      /**
       * <pre>
       * kG for arm pos ctl
       * </pre>
       *
       * <code>double kF_cosine = 8;</code>
       * @param value The kFCosine to set.
       * @return This builder for chaining.
       */
      public Builder setKFCosine(double value) {

        kFCosine_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kG for arm pos ctl
       * </pre>
       *
       * <code>double kF_cosine = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearKFCosine() {
        bitField0_ = (bitField0_ & ~0x00000080);
        kFCosine_ = 0D;
        onChanged();
        return this;
      }

      private double kU_ ;
      /**
       * <pre>
       * "ultimate gain" for ziegler-nichols
       * </pre>
       *
       * <code>double kU = 9;</code>
       * @return The kU.
       */
      @java.lang.Override
      public double getKU() {
        return kU_;
      }
      /**
       * <pre>
       * "ultimate gain" for ziegler-nichols
       * </pre>
       *
       * <code>double kU = 9;</code>
       * @param value The kU to set.
       * @return This builder for chaining.
       */
      public Builder setKU(double value) {

        kU_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "ultimate gain" for ziegler-nichols
       * </pre>
       *
       * <code>double kU = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearKU() {
        bitField0_ = (bitField0_ & ~0x00000100);
        kU_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CLIPPY.control.ControlGains)
    }

    // @@protoc_insertion_point(class_scope:CLIPPY.control.ControlGains)
    private static final CLIPPY.control.ControlGainsOuterClass.ControlGains DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CLIPPY.control.ControlGainsOuterClass.ControlGains();
    }

    public static CLIPPY.control.ControlGainsOuterClass.ControlGains getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlGains>
        PARSER = new com.google.protobuf.AbstractParser<ControlGains>() {
      @java.lang.Override
      public ControlGains parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ControlGains> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlGains> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CLIPPY.control.ControlGainsOuterClass.ControlGains getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_control_ControlGains_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_control_ControlGains_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ControlGains.proto\022\016CLIPPY.control\"\235\001\n" +
      "\014ControlGains\022\021\n\tsystem_id\030\001 \001(\t\022\n\n\002kP\030\002" +
      " \001(\001\022\n\n\002kI\030\003 \001(\001\022\n\n\002kD\030\004 \001(\001\022\021\n\tkF_stati" +
      "c\030\005 \001(\001\022\021\n\tkF_linear\030\006 \001(\001\022\021\n\tkF_square\030" +
      "\007 \001(\001\022\021\n\tkF_cosine\030\010 \001(\001\022\n\n\002kU\030\t \001(\001b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_CLIPPY_control_ControlGains_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLIPPY_control_ControlGains_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_control_ControlGains_descriptor,
        new java.lang.String[] { "SystemId", "KP", "KI", "KD", "KFStatic", "KFLinear", "KFSquare", "KFCosine", "KU", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
