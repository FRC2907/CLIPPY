// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ControlTarget.proto

package CLIPPY.control;

public final class ControlTargetOuterClass {
  private ControlTargetOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ControlTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLIPPY.control.ControlTarget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <code>string system_id = 2;</code>
     * @return The systemId.
     */
    java.lang.String getSystemId();
    /**
     * <code>string system_id = 2;</code>
     * @return The bytes for systemId.
     */
    com.google.protobuf.ByteString
        getSystemIdBytes();

    /**
     * <pre>
     * avoid
     * </pre>
     *
     * <code>double voltage = 7;</code>
     * @return Whether the voltage field is set.
     */
    boolean hasVoltage();
    /**
     * <pre>
     * avoid
     * </pre>
     *
     * <code>double voltage = 7;</code>
     * @return The voltage.
     */
    double getVoltage();

    /**
     * <code>double current = 8;</code>
     * @return Whether the current field is set.
     */
    boolean hasCurrent();
    /**
     * <code>double current = 8;</code>
     * @return The current.
     */
    double getCurrent();

    /**
     * <code>double position = 9;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <code>double position = 9;</code>
     * @return The position.
     */
    double getPosition();

    /**
     * <code>double velocity = 10;</code>
     * @return Whether the velocity field is set.
     */
    boolean hasVelocity();
    /**
     * <code>double velocity = 10;</code>
     * @return The velocity.
     */
    double getVelocity();

    /**
     * <code>double acceleration = 11;</code>
     * @return Whether the acceleration field is set.
     */
    boolean hasAcceleration();
    /**
     * <code>double acceleration = 11;</code>
     * @return The acceleration.
     */
    double getAcceleration();

    /**
     * <pre>
     * for solenoids
     * </pre>
     *
     * <code>bool active = 12;</code>
     * @return Whether the active field is set.
     */
    boolean hasActive();
    /**
     * <pre>
     * for solenoids
     * </pre>
     *
     * <code>bool active = 12;</code>
     * @return The active.
     */
    boolean getActive();

    CLIPPY.control.ControlTargetOuterClass.ControlTarget.TargetCase getTargetCase();
  }
  /**
   * Protobuf type {@code CLIPPY.control.ControlTarget}
   */
  public static final class ControlTarget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CLIPPY.control.ControlTarget)
      ControlTargetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControlTarget.newBuilder() to construct.
    private ControlTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlTarget() {
      systemId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControlTarget();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_ControlTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_ControlTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CLIPPY.control.ControlTargetOuterClass.ControlTarget.class, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder.class);
    }

    private int bitField0_;
    private int targetCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      VOLTAGE(7),
      CURRENT(8),
      POSITION(9),
      VELOCITY(10),
      ACCELERATION(11),
      ACTIVE(12),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 7: return VOLTAGE;
          case 8: return CURRENT;
          case 9: return POSITION;
          case 10: return VELOCITY;
          case 11: return ACCELERATION;
          case 12: return ACTIVE;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * Timestamp at which we wish to achieve this target (empty for "now")
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    public static final int SYSTEM_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object systemId_ = "";
    /**
     * <code>string system_id = 2;</code>
     * @return The systemId.
     */
    @java.lang.Override
    public java.lang.String getSystemId() {
      java.lang.Object ref = systemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        systemId_ = s;
        return s;
      }
    }
    /**
     * <code>string system_id = 2;</code>
     * @return The bytes for systemId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSystemIdBytes() {
      java.lang.Object ref = systemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        systemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VOLTAGE_FIELD_NUMBER = 7;
    /**
     * <pre>
     * avoid
     * </pre>
     *
     * <code>double voltage = 7;</code>
     * @return Whether the voltage field is set.
     */
    @java.lang.Override
    public boolean hasVoltage() {
      return targetCase_ == 7;
    }
    /**
     * <pre>
     * avoid
     * </pre>
     *
     * <code>double voltage = 7;</code>
     * @return The voltage.
     */
    @java.lang.Override
    public double getVoltage() {
      if (targetCase_ == 7) {
        return (java.lang.Double) target_;
      }
      return 0D;
    }

    public static final int CURRENT_FIELD_NUMBER = 8;
    /**
     * <code>double current = 8;</code>
     * @return Whether the current field is set.
     */
    @java.lang.Override
    public boolean hasCurrent() {
      return targetCase_ == 8;
    }
    /**
     * <code>double current = 8;</code>
     * @return The current.
     */
    @java.lang.Override
    public double getCurrent() {
      if (targetCase_ == 8) {
        return (java.lang.Double) target_;
      }
      return 0D;
    }

    public static final int POSITION_FIELD_NUMBER = 9;
    /**
     * <code>double position = 9;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return targetCase_ == 9;
    }
    /**
     * <code>double position = 9;</code>
     * @return The position.
     */
    @java.lang.Override
    public double getPosition() {
      if (targetCase_ == 9) {
        return (java.lang.Double) target_;
      }
      return 0D;
    }

    public static final int VELOCITY_FIELD_NUMBER = 10;
    /**
     * <code>double velocity = 10;</code>
     * @return Whether the velocity field is set.
     */
    @java.lang.Override
    public boolean hasVelocity() {
      return targetCase_ == 10;
    }
    /**
     * <code>double velocity = 10;</code>
     * @return The velocity.
     */
    @java.lang.Override
    public double getVelocity() {
      if (targetCase_ == 10) {
        return (java.lang.Double) target_;
      }
      return 0D;
    }

    public static final int ACCELERATION_FIELD_NUMBER = 11;
    /**
     * <code>double acceleration = 11;</code>
     * @return Whether the acceleration field is set.
     */
    @java.lang.Override
    public boolean hasAcceleration() {
      return targetCase_ == 11;
    }
    /**
     * <code>double acceleration = 11;</code>
     * @return The acceleration.
     */
    @java.lang.Override
    public double getAcceleration() {
      if (targetCase_ == 11) {
        return (java.lang.Double) target_;
      }
      return 0D;
    }

    public static final int ACTIVE_FIELD_NUMBER = 12;
    /**
     * <pre>
     * for solenoids
     * </pre>
     *
     * <code>bool active = 12;</code>
     * @return Whether the active field is set.
     */
    @java.lang.Override
    public boolean hasActive() {
      return targetCase_ == 12;
    }
    /**
     * <pre>
     * for solenoids
     * </pre>
     *
     * <code>bool active = 12;</code>
     * @return The active.
     */
    @java.lang.Override
    public boolean getActive() {
      if (targetCase_ == 12) {
        return (java.lang.Boolean) target_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTimestamp());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, systemId_);
      }
      if (targetCase_ == 7) {
        output.writeDouble(
            7, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 8) {
        output.writeDouble(
            8, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 9) {
        output.writeDouble(
            9, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 10) {
        output.writeDouble(
            10, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 11) {
        output.writeDouble(
            11, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 12) {
        output.writeBool(
            12, (boolean)((java.lang.Boolean) target_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, systemId_);
      }
      if (targetCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              7, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              8, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              9, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              10, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              11, (double)((java.lang.Double) target_));
      }
      if (targetCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              12, (boolean)((java.lang.Boolean) target_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CLIPPY.control.ControlTargetOuterClass.ControlTarget)) {
        return super.equals(obj);
      }
      CLIPPY.control.ControlTargetOuterClass.ControlTarget other = (CLIPPY.control.ControlTargetOuterClass.ControlTarget) obj;

      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
      }
      if (!getSystemId()
          .equals(other.getSystemId())) return false;
      if (!getTargetCase().equals(other.getTargetCase())) return false;
      switch (targetCase_) {
        case 7:
          if (java.lang.Double.doubleToLongBits(getVoltage())
              != java.lang.Double.doubleToLongBits(
                  other.getVoltage())) return false;
          break;
        case 8:
          if (java.lang.Double.doubleToLongBits(getCurrent())
              != java.lang.Double.doubleToLongBits(
                  other.getCurrent())) return false;
          break;
        case 9:
          if (java.lang.Double.doubleToLongBits(getPosition())
              != java.lang.Double.doubleToLongBits(
                  other.getPosition())) return false;
          break;
        case 10:
          if (java.lang.Double.doubleToLongBits(getVelocity())
              != java.lang.Double.doubleToLongBits(
                  other.getVelocity())) return false;
          break;
        case 11:
          if (java.lang.Double.doubleToLongBits(getAcceleration())
              != java.lang.Double.doubleToLongBits(
                  other.getAcceleration())) return false;
          break;
        case 12:
          if (getActive()
              != other.getActive()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (37 * hash) + SYSTEM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSystemId().hashCode();
      switch (targetCase_) {
        case 7:
          hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getVoltage()));
          break;
        case 8:
          hash = (37 * hash) + CURRENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getCurrent()));
          break;
        case 9:
          hash = (37 * hash) + POSITION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getPosition()));
          break;
        case 10:
          hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getVelocity()));
          break;
        case 11:
          hash = (37 * hash) + ACCELERATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getAcceleration()));
          break;
        case 12:
          hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getActive());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CLIPPY.control.ControlTargetOuterClass.ControlTarget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLIPPY.control.ControlTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLIPPY.control.ControlTarget)
        CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_ControlTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_ControlTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.control.ControlTargetOuterClass.ControlTarget.class, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder.class);
      }

      // Construct using CLIPPY.control.ControlTargetOuterClass.ControlTarget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimestampFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        systemId_ = "";
        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_ControlTarget_descriptor;
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget getDefaultInstanceForType() {
        return CLIPPY.control.ControlTargetOuterClass.ControlTarget.getDefaultInstance();
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget build() {
        CLIPPY.control.ControlTargetOuterClass.ControlTarget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget buildPartial() {
        CLIPPY.control.ControlTargetOuterClass.ControlTarget result = new CLIPPY.control.ControlTargetOuterClass.ControlTarget(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(CLIPPY.control.ControlTargetOuterClass.ControlTarget result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestamp_ = timestampBuilder_ == null
              ? timestamp_
              : timestampBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.systemId_ = systemId_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(CLIPPY.control.ControlTargetOuterClass.ControlTarget result) {
        result.targetCase_ = targetCase_;
        result.target_ = this.target_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CLIPPY.control.ControlTargetOuterClass.ControlTarget) {
          return mergeFrom((CLIPPY.control.ControlTargetOuterClass.ControlTarget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CLIPPY.control.ControlTargetOuterClass.ControlTarget other) {
        if (other == CLIPPY.control.ControlTargetOuterClass.ControlTarget.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (!other.getSystemId().isEmpty()) {
          systemId_ = other.systemId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        switch (other.getTargetCase()) {
          case VOLTAGE: {
            setVoltage(other.getVoltage());
            break;
          }
          case CURRENT: {
            setCurrent(other.getCurrent());
            break;
          }
          case POSITION: {
            setPosition(other.getPosition());
            break;
          }
          case VELOCITY: {
            setVelocity(other.getVelocity());
            break;
          }
          case ACCELERATION: {
            setAcceleration(other.getAcceleration());
            break;
          }
          case ACTIVE: {
            setActive(other.getActive());
            break;
          }
          case TARGET_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTimestampFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                systemId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 57: {
                target_ = input.readDouble();
                targetCase_ = 7;
                break;
              } // case 57
              case 65: {
                target_ = input.readDouble();
                targetCase_ = 8;
                break;
              } // case 65
              case 73: {
                target_ = input.readDouble();
                targetCase_ = 9;
                break;
              } // case 73
              case 81: {
                target_ = input.readDouble();
                targetCase_ = 10;
                break;
              } // case 81
              case 89: {
                target_ = input.readDouble();
                targetCase_ = 11;
                break;
              } // case 89
              case 96: {
                target_ = input.readBool();
                targetCase_ = 12;
                break;
              } // case 96
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.Timestamp timestamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return The timestamp.
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
        } else {
          timestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            timestamp_ != null &&
            timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTimestampBuilder().mergeFrom(value);
          } else {
            timestamp_ = value;
          }
        } else {
          timestampBuilder_.mergeFrom(value);
        }
        if (timestamp_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * Timestamp at which we wish to achieve this target (empty for "now")
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private java.lang.Object systemId_ = "";
      /**
       * <code>string system_id = 2;</code>
       * @return The systemId.
       */
      public java.lang.String getSystemId() {
        java.lang.Object ref = systemId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          systemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string system_id = 2;</code>
       * @return The bytes for systemId.
       */
      public com.google.protobuf.ByteString
          getSystemIdBytes() {
        java.lang.Object ref = systemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          systemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string system_id = 2;</code>
       * @param value The systemId to set.
       * @return This builder for chaining.
       */
      public Builder setSystemId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        systemId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string system_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemId() {
        systemId_ = getDefaultInstance().getSystemId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string system_id = 2;</code>
       * @param value The bytes for systemId to set.
       * @return This builder for chaining.
       */
      public Builder setSystemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        systemId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * avoid
       * </pre>
       *
       * <code>double voltage = 7;</code>
       * @return Whether the voltage field is set.
       */
      public boolean hasVoltage() {
        return targetCase_ == 7;
      }
      /**
       * <pre>
       * avoid
       * </pre>
       *
       * <code>double voltage = 7;</code>
       * @return The voltage.
       */
      public double getVoltage() {
        if (targetCase_ == 7) {
          return (java.lang.Double) target_;
        }
        return 0D;
      }
      /**
       * <pre>
       * avoid
       * </pre>
       *
       * <code>double voltage = 7;</code>
       * @param value The voltage to set.
       * @return This builder for chaining.
       */
      public Builder setVoltage(double value) {

        targetCase_ = 7;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * avoid
       * </pre>
       *
       * <code>double voltage = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoltage() {
        if (targetCase_ == 7) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double current = 8;</code>
       * @return Whether the current field is set.
       */
      public boolean hasCurrent() {
        return targetCase_ == 8;
      }
      /**
       * <code>double current = 8;</code>
       * @return The current.
       */
      public double getCurrent() {
        if (targetCase_ == 8) {
          return (java.lang.Double) target_;
        }
        return 0D;
      }
      /**
       * <code>double current = 8;</code>
       * @param value The current to set.
       * @return This builder for chaining.
       */
      public Builder setCurrent(double value) {

        targetCase_ = 8;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double current = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrent() {
        if (targetCase_ == 8) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double position = 9;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return targetCase_ == 9;
      }
      /**
       * <code>double position = 9;</code>
       * @return The position.
       */
      public double getPosition() {
        if (targetCase_ == 9) {
          return (java.lang.Double) target_;
        }
        return 0D;
      }
      /**
       * <code>double position = 9;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(double value) {

        targetCase_ = 9;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double position = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        if (targetCase_ == 9) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double velocity = 10;</code>
       * @return Whether the velocity field is set.
       */
      public boolean hasVelocity() {
        return targetCase_ == 10;
      }
      /**
       * <code>double velocity = 10;</code>
       * @return The velocity.
       */
      public double getVelocity() {
        if (targetCase_ == 10) {
          return (java.lang.Double) target_;
        }
        return 0D;
      }
      /**
       * <code>double velocity = 10;</code>
       * @param value The velocity to set.
       * @return This builder for chaining.
       */
      public Builder setVelocity(double value) {

        targetCase_ = 10;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double velocity = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelocity() {
        if (targetCase_ == 10) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double acceleration = 11;</code>
       * @return Whether the acceleration field is set.
       */
      public boolean hasAcceleration() {
        return targetCase_ == 11;
      }
      /**
       * <code>double acceleration = 11;</code>
       * @return The acceleration.
       */
      public double getAcceleration() {
        if (targetCase_ == 11) {
          return (java.lang.Double) target_;
        }
        return 0D;
      }
      /**
       * <code>double acceleration = 11;</code>
       * @param value The acceleration to set.
       * @return This builder for chaining.
       */
      public Builder setAcceleration(double value) {

        targetCase_ = 11;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double acceleration = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceleration() {
        if (targetCase_ == 11) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * for solenoids
       * </pre>
       *
       * <code>bool active = 12;</code>
       * @return Whether the active field is set.
       */
      public boolean hasActive() {
        return targetCase_ == 12;
      }
      /**
       * <pre>
       * for solenoids
       * </pre>
       *
       * <code>bool active = 12;</code>
       * @return The active.
       */
      public boolean getActive() {
        if (targetCase_ == 12) {
          return (java.lang.Boolean) target_;
        }
        return false;
      }
      /**
       * <pre>
       * for solenoids
       * </pre>
       *
       * <code>bool active = 12;</code>
       * @param value The active to set.
       * @return This builder for chaining.
       */
      public Builder setActive(boolean value) {

        targetCase_ = 12;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * for solenoids
       * </pre>
       *
       * <code>bool active = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearActive() {
        if (targetCase_ == 12) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CLIPPY.control.ControlTarget)
    }

    // @@protoc_insertion_point(class_scope:CLIPPY.control.ControlTarget)
    private static final CLIPPY.control.ControlTargetOuterClass.ControlTarget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CLIPPY.control.ControlTargetOuterClass.ControlTarget();
    }

    public static CLIPPY.control.ControlTargetOuterClass.ControlTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlTarget>
        PARSER = new com.google.protobuf.AbstractParser<ControlTarget>() {
      @java.lang.Override
      public ControlTarget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ControlTarget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlTarget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CLIPPY.control.ControlTargetOuterClass.ControlTarget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiSystemControlTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLIPPY.control.MultiSystemControlTarget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget> 
        getTargetsList();
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    CLIPPY.control.ControlTargetOuterClass.ControlTarget getTargets(int index);
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    int getTargetsCount();
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    java.util.List<? extends CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder getTargetsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CLIPPY.control.MultiSystemControlTarget}
   */
  public static final class MultiSystemControlTarget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CLIPPY.control.MultiSystemControlTarget)
      MultiSystemControlTargetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiSystemControlTarget.newBuilder() to construct.
    private MultiSystemControlTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiSystemControlTarget() {
      targets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiSystemControlTarget();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_MultiSystemControlTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.class, CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
     * Not the timestamp at which they should all take effect---those are specified by each individual target
     * TODO think about this
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    public static final int TARGETS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget> targets_;
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget> getTargetsList() {
      return targets_;
    }
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    @java.lang.Override
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    @java.lang.Override
    public CLIPPY.control.ControlTargetOuterClass.ControlTarget getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
     */
    @java.lang.Override
    public CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTimestamp());
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(3, targets_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, targets_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget)) {
        return super.equals(obj);
      }
      CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget other = (CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget) obj;

      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
      }
      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLIPPY.control.MultiSystemControlTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLIPPY.control.MultiSystemControlTarget)
        CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTargetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_MultiSystemControlTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.class, CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.Builder.class);
      }

      // Construct using CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimestampFieldBuilder();
          getTargetsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
        } else {
          targets_ = null;
          targetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CLIPPY.control.ControlTargetOuterClass.internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor;
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget getDefaultInstanceForType() {
        return CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.getDefaultInstance();
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget build() {
        CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget buildPartial() {
        CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget result = new CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget result) {
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
      }

      private void buildPartial0(CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestamp_ = timestampBuilder_ == null
              ? timestamp_
              : timestampBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget) {
          return mergeFrom((CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget other) {
        if (other == CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000002);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTimestampFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                CLIPPY.control.ControlTargetOuterClass.ControlTarget m =
                    input.readMessage(
                        CLIPPY.control.ControlTargetOuterClass.ControlTarget.parser(),
                        extensionRegistry);
                if (targetsBuilder_ == null) {
                  ensureTargetsIsMutable();
                  targets_.add(m);
                } else {
                  targetsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Timestamp timestamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return The timestamp.
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
        } else {
          timestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            timestamp_ != null &&
            timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTimestampBuilder().mergeFrom(value);
          } else {
            timestamp_ = value;
          }
        } else {
          timestampBuilder_.mergeFrom(value);
        }
        if (timestamp_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * Timestamp at which this collection of ControlTargets should be processed. Omit for immediate processing
       * Not the timestamp at which they should all take effect---those are specified by each individual target
       * TODO think about this
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          targets_ = new java.util.ArrayList<CLIPPY.control.ControlTargetOuterClass.ControlTarget>(targets_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          CLIPPY.control.ControlTargetOuterClass.ControlTarget, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder, CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder> targetsBuilder_;

      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder setTargets(
          int index, CLIPPY.control.ControlTargetOuterClass.ControlTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder setTargets(
          int index, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder addTargets(CLIPPY.control.ControlTargetOuterClass.ControlTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder addTargets(
          int index, CLIPPY.control.ControlTargetOuterClass.ControlTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder addTargets(
          CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder addTargets(
          int index, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends CLIPPY.control.ControlTargetOuterClass.ControlTarget> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public java.util.List<? extends CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            CLIPPY.control.ControlTargetOuterClass.ControlTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, CLIPPY.control.ControlTargetOuterClass.ControlTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .CLIPPY.control.ControlTarget targets = 3;</code>
       */
      public java.util.List<CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          CLIPPY.control.ControlTargetOuterClass.ControlTarget, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder, CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              CLIPPY.control.ControlTargetOuterClass.ControlTarget, CLIPPY.control.ControlTargetOuterClass.ControlTarget.Builder, CLIPPY.control.ControlTargetOuterClass.ControlTargetOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CLIPPY.control.MultiSystemControlTarget)
    }

    // @@protoc_insertion_point(class_scope:CLIPPY.control.MultiSystemControlTarget)
    private static final CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget();
    }

    public static CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiSystemControlTarget>
        PARSER = new com.google.protobuf.AbstractParser<MultiSystemControlTarget>() {
      @java.lang.Override
      public MultiSystemControlTarget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MultiSystemControlTarget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiSystemControlTarget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CLIPPY.control.ControlTargetOuterClass.MultiSystemControlTarget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_control_ControlTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_control_ControlTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_control_MultiSystemControlTarget_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ControlTarget.proto\022\016CLIPPY.control\032\037g" +
      "oogle/protobuf/timestamp.proto\"\323\001\n\rContr" +
      "olTarget\022-\n\ttimestamp\030\001 \001(\0132\032.google.pro" +
      "tobuf.Timestamp\022\021\n\tsystem_id\030\002 \001(\t\022\021\n\007vo" +
      "ltage\030\007 \001(\001H\000\022\021\n\007current\030\010 \001(\001H\000\022\022\n\010posi" +
      "tion\030\t \001(\001H\000\022\022\n\010velocity\030\n \001(\001H\000\022\026\n\014acce" +
      "leration\030\013 \001(\001H\000\022\020\n\006active\030\014 \001(\010H\000B\010\n\006ta" +
      "rget\"y\n\030MultiSystemControlTarget\022-\n\ttime" +
      "stamp\030\001 \001(\0132\032.google.protobuf.Timestamp\022" +
      ".\n\007targets\030\003 \003(\0132\035.CLIPPY.control.Contro" +
      "lTargetb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_CLIPPY_control_ControlTarget_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLIPPY_control_ControlTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_control_ControlTarget_descriptor,
        new java.lang.String[] { "Timestamp", "SystemId", "Voltage", "Current", "Position", "Velocity", "Acceleration", "Active", "Target", });
    internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CLIPPY_control_MultiSystemControlTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_control_MultiSystemControlTarget_descriptor,
        new java.lang.String[] { "Timestamp", "Targets", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
