// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ControlStyle.proto

#include "ControlStyle.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace CLIPPY {
namespace control {
        template <typename>
PROTOBUF_CONSTEXPR ControlStyle::ControlStyle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.timestamp_)*/ nullptr,
      /*decltype(_impl_.control_style_)*/ 0,
    } {}
struct ControlStyleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlStyleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlStyleDefaultTypeInternal() {}
  union {
    ControlStyle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlStyleDefaultTypeInternal _ControlStyle_default_instance_;
}  // namespace control
}  // namespace CLIPPY
static ::_pb::Metadata file_level_metadata_ControlStyle_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ControlStyle_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ControlStyle_2eproto = nullptr;
const ::uint32_t TableStruct_ControlStyle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CLIPPY::control::ControlStyle, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CLIPPY::control::ControlStyle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CLIPPY::control::ControlStyle, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::CLIPPY::control::ControlStyle, _impl_.control_style_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CLIPPY::control::ControlStyle)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::CLIPPY::control::_ControlStyle_default_instance_._instance,
};
const char descriptor_table_protodef_ControlStyle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022ControlStyle.proto\022\016CLIPPY.control\032\037go"
    "ogle/protobuf/timestamp.proto\"v\n\014Control"
    "Style\022-\n\ttimestamp\030\001 \001(\0132\032.google.protob"
    "uf.Timestamp\0227\n\rcontrol_style\030\002 \001(\0162 .CL"
    "IPPY.control.ControlStyleEnum*J\n\020Control"
    "StyleEnum\022\016\n\nNO_CONTROL\020\000\022\r\n\tMANUAL_DS\020\001"
    "\022\n\n\006MANUAL\020\002\022\013\n\007PLANNER\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ControlStyle_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ControlStyle_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ControlStyle_2eproto = {
    false,
    false,
    273,
    descriptor_table_protodef_ControlStyle_2eproto,
    "ControlStyle.proto",
    &descriptor_table_ControlStyle_2eproto_once,
    descriptor_table_ControlStyle_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_ControlStyle_2eproto::offsets,
    file_level_metadata_ControlStyle_2eproto,
    file_level_enum_descriptors_ControlStyle_2eproto,
    file_level_service_descriptors_ControlStyle_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ControlStyle_2eproto_getter() {
  return &descriptor_table_ControlStyle_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ControlStyle_2eproto(&descriptor_table_ControlStyle_2eproto);
namespace CLIPPY {
namespace control {
const ::google::protobuf::EnumDescriptor* ControlStyleEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ControlStyle_2eproto);
  return file_level_enum_descriptors_ControlStyle_2eproto[0];
}
bool ControlStyleEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class ControlStyle::_Internal {
 public:
  using HasBits = decltype(std::declval<ControlStyle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& timestamp(const ControlStyle* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& ControlStyle::_Internal::timestamp(const ControlStyle* msg) {
  return *msg->_impl_.timestamp_;
}
void ControlStyle::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ControlStyle::ControlStyle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CLIPPY.control.ControlStyle)
}
ControlStyle::ControlStyle(const ControlStyle& from) : ::google::protobuf::Message() {
  ControlStyle* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.timestamp_){nullptr},
      decltype(_impl_.control_style_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.timestamp_ = new ::google::protobuf::Timestamp(*from._impl_.timestamp_);
  }
  _this->_impl_.control_style_ = from._impl_.control_style_;

  // @@protoc_insertion_point(copy_constructor:CLIPPY.control.ControlStyle)
}
inline void ControlStyle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.timestamp_){nullptr},
      decltype(_impl_.control_style_){0},
  };
}
ControlStyle::~ControlStyle() {
  // @@protoc_insertion_point(destructor:CLIPPY.control.ControlStyle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlStyle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.timestamp_;
}
void ControlStyle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ControlStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:CLIPPY.control.ControlStyle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_.control_style_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControlStyle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ControlStyle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControlStyle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .CLIPPY.control.ControlStyleEnum control_style = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStyle, _impl_.control_style_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.control_style_)}},
    // .google.protobuf.Timestamp timestamp = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .CLIPPY.control.ControlStyleEnum control_style = 2;
    {PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.control_style_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* ControlStyle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CLIPPY.control.ControlStyle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // .CLIPPY.control.ControlStyleEnum control_style = 2;
  if (this->_internal_control_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_control_style(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CLIPPY.control.ControlStyle)
  return target;
}

::size_t ControlStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CLIPPY.control.ControlStyle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  // .CLIPPY.control.ControlStyleEnum control_style = 2;
  if (this->_internal_control_style() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_control_style());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControlStyle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ControlStyle::MergeImpl
};
const ::google::protobuf::Message::ClassData*ControlStyle::GetClassData() const { return &_class_data_; }


void ControlStyle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControlStyle*>(&to_msg);
  auto& from = static_cast<const ControlStyle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CLIPPY.control.ControlStyle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  if (from._internal_control_style() != 0) {
    _this->_internal_set_control_style(from._internal_control_style());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlStyle::CopyFrom(const ControlStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CLIPPY.control.ControlStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControlStyle::IsInitialized() const {
  return true;
}

void ControlStyle::InternalSwap(ControlStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.control_style_)
      + sizeof(ControlStyle::_impl_.control_style_)
      - PROTOBUF_FIELD_OFFSET(ControlStyle, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata ControlStyle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ControlStyle_2eproto_getter, &descriptor_table_ControlStyle_2eproto_once,
      file_level_metadata_ControlStyle_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace control
}  // namespace CLIPPY
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
