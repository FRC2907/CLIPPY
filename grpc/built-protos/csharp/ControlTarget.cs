// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ControlTarget.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CLIPPY.Control {

  /// <summary>Holder for reflection information generated from ControlTarget.proto</summary>
  public static partial class ControlTargetReflection {

    #region Descriptor
    /// <summary>File descriptor for ControlTarget.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControlTargetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDb250cm9sVGFyZ2V0LnByb3RvEg5DTElQUFkuY29udHJvbBoNVXJnZW5j",
            "eS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byL9AQoN",
            "Q29udHJvbFRhcmdldBItCgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEhEKCXN5c3RlbV9pZBgCIAEoCRIoCgd1cmdlbmN5",
            "GAMgASgOMhcuQ0xJUFBZLmNvbnRyb2wuVXJnZW5jeRIRCgd2b2x0YWdlGAcg",
            "ASgBSAASEQoHY3VycmVudBgIIAEoAUgAEhIKCHBvc2l0aW9uGAkgASgBSAAS",
            "EgoIdmVsb2NpdHkYCiABKAFIABIWCgxhY2NlbGVyYXRpb24YCyABKAFIABIQ",
            "CgZhY3RpdmUYDCABKAhIAEIICgZvdXRwdXQiowEKGE11bHRpU3lzdGVtQ29u",
            "dHJvbFRhcmdldBItCgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEigKB3VyZ2VuY3kYAiABKA4yFy5DTElQUFkuY29udHJv",
            "bC5VcmdlbmN5Ei4KB3RhcmdldHMYAyADKAsyHS5DTElQUFkuY29udHJvbC5D",
            "b250cm9sVGFyZ2V0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CLIPPY.Control.UrgencyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CLIPPY.Control.ControlTarget), global::CLIPPY.Control.ControlTarget.Parser, new[]{ "Timestamp", "SystemId", "Urgency", "Voltage", "Current", "Position", "Velocity", "Acceleration", "Active" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLIPPY.Control.MultiSystemControlTarget), global::CLIPPY.Control.MultiSystemControlTarget.Parser, new[]{ "Timestamp", "Urgency", "Targets" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ControlTarget : pb::IMessage<ControlTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControlTarget> _parser = new pb::MessageParser<ControlTarget>(() => new ControlTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLIPPY.Control.ControlTargetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlTarget(ControlTarget other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      systemId_ = other.systemId_;
      urgency_ = other.urgency_;
      switch (other.OutputCase) {
        case OutputOneofCase.Voltage:
          Voltage = other.Voltage;
          break;
        case OutputOneofCase.Current:
          Current = other.Current;
          break;
        case OutputOneofCase.Position:
          Position = other.Position;
          break;
        case OutputOneofCase.Velocity:
          Velocity = other.Velocity;
          break;
        case OutputOneofCase.Acceleration:
          Acceleration = other.Acceleration;
          break;
        case OutputOneofCase.Active:
          Active = other.Active;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlTarget Clone() {
      return new ControlTarget(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp at which this target takes effect (empty for "now")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "system_id" field.</summary>
    public const int SystemIdFieldNumber = 2;
    private string systemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SystemId {
      get { return systemId_; }
      set {
        systemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "urgency" field.</summary>
    public const int UrgencyFieldNumber = 3;
    private global::CLIPPY.Control.Urgency urgency_ = global::CLIPPY.Control.Urgency.Unassigned;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CLIPPY.Control.Urgency Urgency {
      get { return urgency_; }
      set {
        urgency_ = value;
      }
    }

    /// <summary>Field number for the "voltage" field.</summary>
    public const int VoltageFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Voltage {
      get { return HasVoltage ? (double) output_ : 0D; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Voltage;
      }
    }
    /// <summary>Gets whether the "voltage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoltage {
      get { return outputCase_ == OutputOneofCase.Voltage; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "voltage" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoltage() {
      if (HasVoltage) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Current {
      get { return HasCurrent ? (double) output_ : 0D; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Current;
      }
    }
    /// <summary>Gets whether the "current" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrent {
      get { return outputCase_ == OutputOneofCase.Current; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "current" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrent() {
      if (HasCurrent) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Position {
      get { return HasPosition ? (double) output_ : 0D; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Position;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return outputCase_ == OutputOneofCase.Position; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "position" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      if (HasPosition) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Velocity {
      get { return HasVelocity ? (double) output_ : 0D; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Velocity;
      }
    }
    /// <summary>Gets whether the "velocity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVelocity {
      get { return outputCase_ == OutputOneofCase.Velocity; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "velocity" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocity() {
      if (HasVelocity) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "acceleration" field.</summary>
    public const int AccelerationFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Acceleration {
      get { return HasAcceleration ? (double) output_ : 0D; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Acceleration;
      }
    }
    /// <summary>Gets whether the "acceleration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAcceleration {
      get { return outputCase_ == OutputOneofCase.Acceleration; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "acceleration" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAcceleration() {
      if (HasAcceleration) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 12;
    /// <summary>
    /// for solenoids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Active {
      get { return HasActive ? (bool) output_ : false; }
      set {
        output_ = value;
        outputCase_ = OutputOneofCase.Active;
      }
    }
    /// <summary>Gets whether the "active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActive {
      get { return outputCase_ == OutputOneofCase.Active; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "active" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActive() {
      if (HasActive) {
        ClearOutput();
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      Voltage = 7,
      Current = 8,
      Position = 9,
      Velocity = 10,
      Acceleration = 11,
      Active = 12,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (SystemId != other.SystemId) return false;
      if (Urgency != other.Urgency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Voltage, other.Voltage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Current, other.Current)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Velocity, other.Velocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Acceleration, other.Acceleration)) return false;
      if (Active != other.Active) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (SystemId.Length != 0) hash ^= SystemId.GetHashCode();
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) hash ^= Urgency.GetHashCode();
      if (HasVoltage) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Voltage);
      if (HasCurrent) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Current);
      if (HasPosition) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Position);
      if (HasVelocity) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Velocity);
      if (HasAcceleration) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Acceleration);
      if (HasActive) hash ^= Active.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (SystemId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SystemId);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Urgency);
      }
      if (HasVoltage) {
        output.WriteRawTag(57);
        output.WriteDouble(Voltage);
      }
      if (HasCurrent) {
        output.WriteRawTag(65);
        output.WriteDouble(Current);
      }
      if (HasPosition) {
        output.WriteRawTag(73);
        output.WriteDouble(Position);
      }
      if (HasVelocity) {
        output.WriteRawTag(81);
        output.WriteDouble(Velocity);
      }
      if (HasAcceleration) {
        output.WriteRawTag(89);
        output.WriteDouble(Acceleration);
      }
      if (HasActive) {
        output.WriteRawTag(96);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (SystemId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SystemId);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Urgency);
      }
      if (HasVoltage) {
        output.WriteRawTag(57);
        output.WriteDouble(Voltage);
      }
      if (HasCurrent) {
        output.WriteRawTag(65);
        output.WriteDouble(Current);
      }
      if (HasPosition) {
        output.WriteRawTag(73);
        output.WriteDouble(Position);
      }
      if (HasVelocity) {
        output.WriteRawTag(81);
        output.WriteDouble(Velocity);
      }
      if (HasAcceleration) {
        output.WriteRawTag(89);
        output.WriteDouble(Acceleration);
      }
      if (HasActive) {
        output.WriteRawTag(96);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (SystemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemId);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Urgency);
      }
      if (HasVoltage) {
        size += 1 + 8;
      }
      if (HasCurrent) {
        size += 1 + 8;
      }
      if (HasPosition) {
        size += 1 + 8;
      }
      if (HasVelocity) {
        size += 1 + 8;
      }
      if (HasAcceleration) {
        size += 1 + 8;
      }
      if (HasActive) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlTarget other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.SystemId.Length != 0) {
        SystemId = other.SystemId;
      }
      if (other.Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        Urgency = other.Urgency;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.Voltage:
          Voltage = other.Voltage;
          break;
        case OutputOneofCase.Current:
          Current = other.Current;
          break;
        case OutputOneofCase.Position:
          Position = other.Position;
          break;
        case OutputOneofCase.Velocity:
          Velocity = other.Velocity;
          break;
        case OutputOneofCase.Acceleration:
          Acceleration = other.Acceleration;
          break;
        case OutputOneofCase.Active:
          Active = other.Active;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            SystemId = input.ReadString();
            break;
          }
          case 24: {
            Urgency = (global::CLIPPY.Control.Urgency) input.ReadEnum();
            break;
          }
          case 57: {
            Voltage = input.ReadDouble();
            break;
          }
          case 65: {
            Current = input.ReadDouble();
            break;
          }
          case 73: {
            Position = input.ReadDouble();
            break;
          }
          case 81: {
            Velocity = input.ReadDouble();
            break;
          }
          case 89: {
            Acceleration = input.ReadDouble();
            break;
          }
          case 96: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            SystemId = input.ReadString();
            break;
          }
          case 24: {
            Urgency = (global::CLIPPY.Control.Urgency) input.ReadEnum();
            break;
          }
          case 57: {
            Voltage = input.ReadDouble();
            break;
          }
          case 65: {
            Current = input.ReadDouble();
            break;
          }
          case 73: {
            Position = input.ReadDouble();
            break;
          }
          case 81: {
            Velocity = input.ReadDouble();
            break;
          }
          case 89: {
            Acceleration = input.ReadDouble();
            break;
          }
          case 96: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultiSystemControlTarget : pb::IMessage<MultiSystemControlTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiSystemControlTarget> _parser = new pb::MessageParser<MultiSystemControlTarget>(() => new MultiSystemControlTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MultiSystemControlTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLIPPY.Control.ControlTargetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiSystemControlTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiSystemControlTarget(MultiSystemControlTarget other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      urgency_ = other.urgency_;
      targets_ = other.targets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiSystemControlTarget Clone() {
      return new MultiSystemControlTarget(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp at which this collection of ControlTargets should be processed
    /// Not the timestamp at which they should all take effect---those are specified by each individual target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "urgency" field.</summary>
    public const int UrgencyFieldNumber = 2;
    private global::CLIPPY.Control.Urgency urgency_ = global::CLIPPY.Control.Urgency.Unassigned;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CLIPPY.Control.Urgency Urgency {
      get { return urgency_; }
      set {
        urgency_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::CLIPPY.Control.ControlTarget> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(26, global::CLIPPY.Control.ControlTarget.Parser);
    private readonly pbc::RepeatedField<global::CLIPPY.Control.ControlTarget> targets_ = new pbc::RepeatedField<global::CLIPPY.Control.ControlTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CLIPPY.Control.ControlTarget> Targets {
      get { return targets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MultiSystemControlTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MultiSystemControlTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Urgency != other.Urgency) return false;
      if(!targets_.Equals(other.targets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) hash ^= Urgency.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Urgency);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Urgency);
      }
      targets_.WriteTo(ref output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Urgency);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MultiSystemControlTarget other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Urgency != global::CLIPPY.Control.Urgency.Unassigned) {
        Urgency = other.Urgency;
      }
      targets_.Add(other.targets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 16: {
            Urgency = (global::CLIPPY.Control.Urgency) input.ReadEnum();
            break;
          }
          case 26: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 16: {
            Urgency = (global::CLIPPY.Control.Urgency) input.ReadEnum();
            break;
          }
          case 26: {
            targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
