// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Log.proto

package CLIPPY.log;

public final class LogOuterClass {
  private LogOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLIPPY.log.Log)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord> 
        getRecordsList();
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    CLIPPY.log.LogOuterClass.Log.LogRecord getRecords(int index);
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    int getRecordsCount();
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    java.util.List<? extends CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder> 
        getRecordsOrBuilderList();
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder getRecordsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CLIPPY.log.Log}
   */
  public static final class Log extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CLIPPY.log.Log)
      LogOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Log.newBuilder() to construct.
    private Log(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Log() {
      records_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Log();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CLIPPY.log.LogOuterClass.Log.class, CLIPPY.log.LogOuterClass.Log.Builder.class);
    }

    public interface LogRecordOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CLIPPY.log.Log.LogRecord)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      boolean hasTimestamp();
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return The timestamp.
       */
      com.google.protobuf.Timestamp getTimestamp();
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

      /**
       * <code>string key = 2;</code>
       * @return The key.
       */
      java.lang.String getKey();
      /**
       * <code>string key = 2;</code>
       * @return The bytes for key.
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>string value = 3;</code>
       * @return The value.
       */
      java.lang.String getValue();
      /**
       * <code>string value = 3;</code>
       * @return The bytes for value.
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * Protobuf type {@code CLIPPY.log.Log.LogRecord}
     */
    public static final class LogRecord extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CLIPPY.log.Log.LogRecord)
        LogRecordOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LogRecord.newBuilder() to construct.
      private LogRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LogRecord() {
        key_ = "";
        value_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LogRecord();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_LogRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_LogRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.log.LogOuterClass.Log.LogRecord.class, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder.class);
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private com.google.protobuf.Timestamp timestamp_;
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public com.google.protobuf.Timestamp getTimestamp() {
        return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
      }

      public static final int KEY_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object key_ = "";
      /**
       * <code>string key = 2;</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        }
      }
      /**
       * <code>string key = 2;</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object value_ = "";
      /**
       * <code>string value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        }
      }
      /**
       * <code>string value = 3;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getTimestamp());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getTimestamp());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof CLIPPY.log.LogOuterClass.Log.LogRecord)) {
          return super.equals(obj);
        }
        CLIPPY.log.LogOuterClass.Log.LogRecord other = (CLIPPY.log.LogOuterClass.Log.LogRecord) obj;

        if (hasTimestamp() != other.hasTimestamp()) return false;
        if (hasTimestamp()) {
          if (!getTimestamp()
              .equals(other.getTimestamp())) return false;
        }
        if (!getKey()
            .equals(other.getKey())) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getTimestamp().hashCode();
        }
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static CLIPPY.log.LogOuterClass.Log.LogRecord parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(CLIPPY.log.LogOuterClass.Log.LogRecord prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CLIPPY.log.Log.LogRecord}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CLIPPY.log.Log.LogRecord)
          CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_LogRecord_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_LogRecord_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  CLIPPY.log.LogOuterClass.Log.LogRecord.class, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder.class);
        }

        // Construct using CLIPPY.log.LogOuterClass.Log.LogRecord.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getTimestampFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          timestamp_ = null;
          if (timestampBuilder_ != null) {
            timestampBuilder_.dispose();
            timestampBuilder_ = null;
          }
          key_ = "";
          value_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_LogRecord_descriptor;
        }

        @java.lang.Override
        public CLIPPY.log.LogOuterClass.Log.LogRecord getDefaultInstanceForType() {
          return CLIPPY.log.LogOuterClass.Log.LogRecord.getDefaultInstance();
        }

        @java.lang.Override
        public CLIPPY.log.LogOuterClass.Log.LogRecord build() {
          CLIPPY.log.LogOuterClass.Log.LogRecord result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public CLIPPY.log.LogOuterClass.Log.LogRecord buildPartial() {
          CLIPPY.log.LogOuterClass.Log.LogRecord result = new CLIPPY.log.LogOuterClass.Log.LogRecord(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(CLIPPY.log.LogOuterClass.Log.LogRecord result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.timestamp_ = timestampBuilder_ == null
                ? timestamp_
                : timestampBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.key_ = key_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.value_ = value_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof CLIPPY.log.LogOuterClass.Log.LogRecord) {
            return mergeFrom((CLIPPY.log.LogOuterClass.Log.LogRecord)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(CLIPPY.log.LogOuterClass.Log.LogRecord other) {
          if (other == CLIPPY.log.LogOuterClass.Log.LogRecord.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            mergeTimestamp(other.getTimestamp());
          }
          if (!other.getKey().isEmpty()) {
            key_ = other.key_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (!other.getValue().isEmpty()) {
            value_ = other.value_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getTimestampFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  key_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  value_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Timestamp timestamp_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         * @return Whether the timestamp field is set.
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         * @return The timestamp.
         */
        public com.google.protobuf.Timestamp getTimestamp() {
          if (timestampBuilder_ == null) {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
          } else {
            return timestampBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder setTimestamp(com.google.protobuf.Timestamp value) {
          if (timestampBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            timestamp_ = value;
          } else {
            timestampBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder setTimestamp(
            com.google.protobuf.Timestamp.Builder builderForValue) {
          if (timestampBuilder_ == null) {
            timestamp_ = builderForValue.build();
          } else {
            timestampBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
          if (timestampBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              timestamp_ != null &&
              timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
              getTimestampBuilder().mergeFrom(value);
            } else {
              timestamp_ = value;
            }
          } else {
            timestampBuilder_.mergeFrom(value);
          }
          if (timestamp_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = null;
          if (timestampBuilder_ != null) {
            timestampBuilder_.dispose();
            timestampBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getTimestampFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
          if (timestampBuilder_ != null) {
            return timestampBuilder_.getMessageOrBuilder();
          } else {
            return timestamp_ == null ?
                com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
          }
        }
        /**
         * <code>.google.protobuf.Timestamp timestamp = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
            getTimestampFieldBuilder() {
          if (timestampBuilder_ == null) {
            timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                    getTimestamp(),
                    getParentForChildren(),
                    isClean());
            timestamp_ = null;
          }
          return timestampBuilder_;
        }

        private java.lang.Object key_ = "";
        /**
         * <code>string key = 2;</code>
         * @return The key.
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string key = 2;</code>
         * @return The bytes for key.
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string key = 2;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          key_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>string key = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          key_ = getDefaultInstance().getKey();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>string key = 2;</code>
         * @param value The bytes for key to set.
         * @return This builder for chaining.
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          key_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <code>string value = 3;</code>
         * @return The value.
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string value = 3;</code>
         * @return The bytes for value.
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string value = 3;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          value_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>string value = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          value_ = getDefaultInstance().getValue();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>string value = 3;</code>
         * @param value The bytes for value to set.
         * @return This builder for chaining.
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          value_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CLIPPY.log.Log.LogRecord)
      }

      // @@protoc_insertion_point(class_scope:CLIPPY.log.Log.LogRecord)
      private static final CLIPPY.log.LogOuterClass.Log.LogRecord DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new CLIPPY.log.LogOuterClass.Log.LogRecord();
      }

      public static CLIPPY.log.LogOuterClass.Log.LogRecord getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LogRecord>
          PARSER = new com.google.protobuf.AbstractParser<LogRecord>() {
        @java.lang.Override
        public LogRecord parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LogRecord> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LogRecord> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public CLIPPY.log.LogOuterClass.Log.LogRecord getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int RECORDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord> records_;
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    @java.lang.Override
    public java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord> getRecordsList() {
      return records_;
    }
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder> 
        getRecordsOrBuilderList() {
      return records_;
    }
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    @java.lang.Override
    public int getRecordsCount() {
      return records_.size();
    }
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    @java.lang.Override
    public CLIPPY.log.LogOuterClass.Log.LogRecord getRecords(int index) {
      return records_.get(index);
    }
    /**
     * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
     */
    @java.lang.Override
    public CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder getRecordsOrBuilder(
        int index) {
      return records_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < records_.size(); i++) {
        output.writeMessage(1, records_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < records_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, records_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CLIPPY.log.LogOuterClass.Log)) {
        return super.equals(obj);
      }
      CLIPPY.log.LogOuterClass.Log other = (CLIPPY.log.LogOuterClass.Log) obj;

      if (!getRecordsList()
          .equals(other.getRecordsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRecordsCount() > 0) {
        hash = (37 * hash) + RECORDS_FIELD_NUMBER;
        hash = (53 * hash) + getRecordsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static CLIPPY.log.LogOuterClass.Log parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static CLIPPY.log.LogOuterClass.Log parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CLIPPY.log.LogOuterClass.Log parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CLIPPY.log.LogOuterClass.Log prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLIPPY.log.Log}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLIPPY.log.Log)
        CLIPPY.log.LogOuterClass.LogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CLIPPY.log.LogOuterClass.Log.class, CLIPPY.log.LogOuterClass.Log.Builder.class);
      }

      // Construct using CLIPPY.log.LogOuterClass.Log.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
        } else {
          records_ = null;
          recordsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CLIPPY.log.LogOuterClass.internal_static_CLIPPY_log_Log_descriptor;
      }

      @java.lang.Override
      public CLIPPY.log.LogOuterClass.Log getDefaultInstanceForType() {
        return CLIPPY.log.LogOuterClass.Log.getDefaultInstance();
      }

      @java.lang.Override
      public CLIPPY.log.LogOuterClass.Log build() {
        CLIPPY.log.LogOuterClass.Log result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CLIPPY.log.LogOuterClass.Log buildPartial() {
        CLIPPY.log.LogOuterClass.Log result = new CLIPPY.log.LogOuterClass.Log(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(CLIPPY.log.LogOuterClass.Log result) {
        if (recordsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            records_ = java.util.Collections.unmodifiableList(records_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.records_ = records_;
        } else {
          result.records_ = recordsBuilder_.build();
        }
      }

      private void buildPartial0(CLIPPY.log.LogOuterClass.Log result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CLIPPY.log.LogOuterClass.Log) {
          return mergeFrom((CLIPPY.log.LogOuterClass.Log)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CLIPPY.log.LogOuterClass.Log other) {
        if (other == CLIPPY.log.LogOuterClass.Log.getDefaultInstance()) return this;
        if (recordsBuilder_ == null) {
          if (!other.records_.isEmpty()) {
            if (records_.isEmpty()) {
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordsIsMutable();
              records_.addAll(other.records_);
            }
            onChanged();
          }
        } else {
          if (!other.records_.isEmpty()) {
            if (recordsBuilder_.isEmpty()) {
              recordsBuilder_.dispose();
              recordsBuilder_ = null;
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecordsFieldBuilder() : null;
            } else {
              recordsBuilder_.addAllMessages(other.records_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                CLIPPY.log.LogOuterClass.Log.LogRecord m =
                    input.readMessage(
                        CLIPPY.log.LogOuterClass.Log.LogRecord.parser(),
                        extensionRegistry);
                if (recordsBuilder_ == null) {
                  ensureRecordsIsMutable();
                  records_.add(m);
                } else {
                  recordsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord> records_ =
        java.util.Collections.emptyList();
      private void ensureRecordsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          records_ = new java.util.ArrayList<CLIPPY.log.LogOuterClass.Log.LogRecord>(records_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          CLIPPY.log.LogOuterClass.Log.LogRecord, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder, CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder> recordsBuilder_;

      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord> getRecordsList() {
        if (recordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(records_);
        } else {
          return recordsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public int getRecordsCount() {
        if (recordsBuilder_ == null) {
          return records_.size();
        } else {
          return recordsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public CLIPPY.log.LogOuterClass.Log.LogRecord getRecords(int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);
        } else {
          return recordsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder setRecords(
          int index, CLIPPY.log.LogOuterClass.Log.LogRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.set(index, value);
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder setRecords(
          int index, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder addRecords(CLIPPY.log.LogOuterClass.Log.LogRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder addRecords(
          int index, CLIPPY.log.LogOuterClass.Log.LogRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(index, value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder addRecords(
          CLIPPY.log.LogOuterClass.Log.LogRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder addRecords(
          int index, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder addAllRecords(
          java.lang.Iterable<? extends CLIPPY.log.LogOuterClass.Log.LogRecord> values) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, records_);
          onChanged();
        } else {
          recordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder clearRecords() {
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public Builder removeRecords(int index) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.remove(index);
          onChanged();
        } else {
          recordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public CLIPPY.log.LogOuterClass.Log.LogRecord.Builder getRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder getRecordsOrBuilder(
          int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);  } else {
          return recordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public java.util.List<? extends CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder> 
           getRecordsOrBuilderList() {
        if (recordsBuilder_ != null) {
          return recordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(records_);
        }
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public CLIPPY.log.LogOuterClass.Log.LogRecord.Builder addRecordsBuilder() {
        return getRecordsFieldBuilder().addBuilder(
            CLIPPY.log.LogOuterClass.Log.LogRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public CLIPPY.log.LogOuterClass.Log.LogRecord.Builder addRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().addBuilder(
            index, CLIPPY.log.LogOuterClass.Log.LogRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .CLIPPY.log.Log.LogRecord records = 1;</code>
       */
      public java.util.List<CLIPPY.log.LogOuterClass.Log.LogRecord.Builder> 
           getRecordsBuilderList() {
        return getRecordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          CLIPPY.log.LogOuterClass.Log.LogRecord, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder, CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder> 
          getRecordsFieldBuilder() {
        if (recordsBuilder_ == null) {
          recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              CLIPPY.log.LogOuterClass.Log.LogRecord, CLIPPY.log.LogOuterClass.Log.LogRecord.Builder, CLIPPY.log.LogOuterClass.Log.LogRecordOrBuilder>(
                  records_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        return recordsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CLIPPY.log.Log)
    }

    // @@protoc_insertion_point(class_scope:CLIPPY.log.Log)
    private static final CLIPPY.log.LogOuterClass.Log DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CLIPPY.log.LogOuterClass.Log();
    }

    public static CLIPPY.log.LogOuterClass.Log getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Log>
        PARSER = new com.google.protobuf.AbstractParser<Log>() {
      @java.lang.Override
      public Log parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Log> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Log> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CLIPPY.log.LogOuterClass.Log getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_log_Log_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_log_Log_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLIPPY_log_Log_LogRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLIPPY_log_Log_LogRecord_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tLog.proto\022\nCLIPPY.log\032\037google/protobuf" +
      "/timestamp.proto\"\211\001\n\003Log\022*\n\007records\030\001 \003(" +
      "\0132\031.CLIPPY.log.Log.LogRecord\032V\n\tLogRecor" +
      "d\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobuf.T" +
      "imestamp\022\013\n\003key\030\002 \001(\t\022\r\n\005value\030\003 \001(\tb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_CLIPPY_log_Log_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLIPPY_log_Log_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_log_Log_descriptor,
        new java.lang.String[] { "Records", });
    internal_static_CLIPPY_log_Log_LogRecord_descriptor =
      internal_static_CLIPPY_log_Log_descriptor.getNestedTypes().get(0);
    internal_static_CLIPPY_log_Log_LogRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLIPPY_log_Log_LogRecord_descriptor,
        new java.lang.String[] { "Timestamp", "Key", "Value", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
